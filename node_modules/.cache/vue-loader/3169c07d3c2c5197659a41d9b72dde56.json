{"remainingRequest":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\Map.vue?vue&type=style&index=0&id=10712789&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\Map.vue","mtime":1642815941025},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641423715596},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KI3ZpZXdEaXYgew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICB0b3A6IDBweDsNCiAgICByaWdodDogMDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgei1pbmRleDogMTsNCiAgfQ0KDQogIC5tYWluew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQp9DQoNCiAgI2luZm97DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgcGFkZGluZzogMTBweDsNCiAgdG9wOiAxMCU7IA0KICBsZWZ0OiA4MCU7DQogIHdpZHRoOiAzMDBweDsNCn0NCiNzdGVwew0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCiAgICB3aWR0aDogMDsNCiAgICBsZWZ0OiAwOw0KICAgIHRvcDogMDsNCiAgICB0cmFuc2l0aW9uOiAwLjVzOw0KICAgIHotaW5kZXg6IDENCn0NCg0KDQo="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components/Map","sourcesContent":["<template class=\"map\">\r\n    <div id=\"viewDiv\" class=\"main\">\r\n        <div id=\"info\" class=\"esri-widget\">\r\n            <div class=\"text-center\">\r\n                <v-snackbar v-model = snackbar timeout=-1>\r\n                    <v-btn dark color=\"pink\" text @click=\"snackbar = false; cancelEditing()\" width=600> Stop Editing </v-btn>\r\n                </v-snackbar>\r\n            </div>\r\n            \r\n            <v-btn elevation=\"2\" @click=\"addRoad(); snackbar = true\" id=\"addBtn\">{{addButton}}</v-btn>\r\n             <div>\r\n                <h2>County Mileage</h2>\r\n                <p v-cloak>County: {{county}} / User Name: {{editTest}}</p>\r\n                <p v-cloak>Previous Total Mileage: {{countyTotal}}</p>\r\n                <p v-cloak>Current Mileage: {{currentMiles}}</p>\r\n                <p v-if=\"isNaN(countyTots)&&isNaN(modifyLine)&&isNaN(modifyLength) ? 0: countyTots\">New Total Miles: {{countyTots}}</p>\r\n            </div>\r\n        </div>\r\n        <div id=\"step\"><stepper/></div>\r\n     </div>\r\n</template>\r\n\r\n<script>\r\nimport {addRoadbed, updateLength,modifyRoadbed, zoomExtents, hightlightFeat, stopEditing} from '../Map/editFunc'\r\nimport {criConstants} from '../../common/cri_constants'\r\nimport stepper from '../../components/stepperQuestion.vue'\r\nimport {roadInfo} from '../../store'\r\n//import { gLayer } from '../Map/map';\r\n//import Graphic from \"@arcgis/core/Graphic\";\r\nimport * as geometryEngine from \"@arcgis/core/geometry/geometryEngine\";\r\n\r\nexport default {\r\n    name: 'Map',\r\n    components: {stepper},\r\n    data(){\r\n        return{\r\n            snackbar: false,\r\n            stepper: false,\r\n            addButton: \"add Road\",\r\n            previousTotal: 0,\r\n            county: \"Travis\",\r\n            username: roadInfo.getName,\r\n            countyTotal: criConstants.countyMiles,\r\n            lineLength: {},\r\n            newMiles: '',\r\n            modifyLine: 0,\r\n            modifyLength: 0,\r\n            editTest: false\r\n        }\r\n    },\r\n    async mounted() {\r\n        const app = await import('../Map/map');\r\n        app.initialize(this.$el); \r\n        zoomExtents();\r\n        hightlightFeat();\r\n        //console.log(this.captureMiles)\r\n        \r\n    },\r\n    methods: {\r\n        addRoad() {\r\n            addRoadbed().then(result=>{\r\n            this.previousTotal += parseFloat(result.toFixed(3))\r\n            this.editTest = true\r\n            })\r\n        },\r\n        cancelEditing(){\r\n            stopEditing();\r\n            this.editTest = false\r\n        }\r\n        \r\n    },\r\n    \r\n    watch:{\r\n        editTest:{\r\n            handler: async function(){\r\n                roadInfo.getaddRoad = this.editTest\r\n            }\r\n        },\r\n       previousTotal() {\r\n            addRoadbed().then(result=>\r\n            this.previousTotal += parseFloat(result.toFixed(3)))\r\n            document.getElementById(\"step\").style.width='450px'\r\n            \r\n        },\r\n\r\n        modifyLine:{\r\n             handler: async function(){\r\n                let modify = await modifyRoadbed(true)\r\n                console.log(roadInfo.roadbedName)\r\n                this.modifyLine += parseFloat(geometryEngine.geodesicLength(modify.features[0].geometry, \"miles\").toFixed(3))\r\n                document.getElementById(\"step\").style.width='450px'\r\n            },\r\n            immediate: true,\r\n        },\r\n        \r\n       modifyLength:{\r\n            handler: function(){\r\n                updateLength().then(result =>{\r\n                    this.modifyLength += parseFloat(result.toFixed(3))\r\n                }) \r\n            },\r\n            immediate: true, \r\n        },\r\n    },\r\n\r\n    computed:{\r\n        countyTots: function(){\r\n            return Number(this.countyTotal) + Number(this.previousTotal) + Number(this.modifyLength) + Number(this.modifyLine)\r\n        },\r\n\r\n        currentMiles: function(){\r\n            return this.previousTotal + this.modifyLength + this.modifyLine\r\n        },\r\n\r\n        setaddRoad: function(){\r\n            return roadInfo.getaddRoad = this.editTest\r\n        }\r\n    }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n#viewDiv {\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  .main{\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n  #info{\r\n  position: absolute;\r\n  padding: 10px;\r\n  top: 10%; \r\n  left: 80%;\r\n  width: 300px;\r\n}\r\n#step{\r\n    position: fixed;\r\n    width: 0;\r\n    left: 0;\r\n    top: 0;\r\n    transition: 0.5s;\r\n    z-index: 1\r\n}\r\n\r\n\r\n</style>"]}]}