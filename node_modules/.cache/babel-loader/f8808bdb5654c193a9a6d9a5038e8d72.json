{"remainingRequest":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\editFunc.js","dependencies":[{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\editFunc.js","mtime":1642817634522},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\babel.config.js","mtime":1642552726370},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641423715596},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/DPROSACK/Documents/GitHub/CRI-Update/src/components/Map/editFunc.js"],"names":["sketch","view","featLayer","gLayer","countyOfficialInfo","cntyNbrNm","roadInfo","geometryEngine","Graphic","Query","countyInfo","countyInfoPromise","Promise","res","queryUrl","window","location","href","crInfo","split","j","length","console","log","whereStatement","query","where","outFields","newQuery","queryFeatures","response","nbr","parseInt","countyInfoReturn","addRoadbed","create","mode","hasZ","on","event","lengthMiles","state","geodesicLength","graphic","geometry","parseFloat","toFixed","modifyRoadbed","bool","promise","opts","include","hitTest","then","i","results","sourceLayer","queryFeat","objectIds","attributes","objectid","returnGeometry","returnM","result","feature","defineGraphic","zoomExtents","zoom","visible","hightlightFeat","editFeature","whenLayerView","layer","layerView","highlight","remove","graphics","dups","newGraphic","type","paths","features","hasM","spatialReference","wkid","roadbedName","street_nm","roadbedDesign","design","roadbedSurface","surface","numLane","num_lanes","beginDfo","begin_dfo","endDfo","end_dfo","symbol","color","width","style","objectidList","add","id","items","push","definitionExpression","cnty_nm","updateLength","updatePromise","evt","oldlengthMile","update","tool","newlengthMiles","deltaLength","undefined","addMiles","Math","abs","subMiles","mileages","stopEditing","cancel","getGraphic","graphicPromise","getName","getDesign","getSurface","getLane","getbeginDfo","getendDfo","returnAttr"],"mappings":"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","sourcesContent":["//import const from map.js\r\nimport {sketch, view, featLayer, gLayer, countyOfficialInfo} from '../Map/map'\r\nimport {cntyNbrNm} from '../../common/txCnt'\r\nimport {roadInfo} from '../../store'\r\n//esri js geometry engine import\r\nimport * as geometryEngine from \"@arcgis/core/geometry/geometryEngine\";\r\nimport Graphic from \"@arcgis/core/Graphic\";\r\nimport Query from \"@arcgis/core/rest/support/Query\";\r\n\r\n\r\n//add login info\r\n\r\n//get county name and road totals\r\nexport async function countyInfo(){\r\n  let countyInfoPromise =  new Promise(function(res){\r\n    let queryUrl = window.location.href\r\n    let crInfo = queryUrl.split('http://localhost:8080/')[1]\r\n    //console.log(crInfo.toString())\r\n    for (let j=0; j < cntyNbrNm.length; j++){\r\n      console.log(cntyNbrNm[j][crInfo])\r\n      if(cntyNbrNm[j][crInfo]){\r\n        let whereStatement = `County_NBR = '${crInfo}'`\r\n        console.log(whereStatement)\r\n        const query = new Query();\r\n        query.where = whereStatement\r\n        query.outFields = [ \"*\" ]\r\n        let newQuery = countyOfficialInfo.queryFeatures(query)\r\n        res({response:true, nbr:parseInt(crInfo), query:newQuery})\r\n      }\r\n      else{\r\n        res({response:false})\r\n      }\r\n    }\r\n    //let crValidation = /^[0-9]{1,3}$/\r\n  })\r\n  \r\n  let countyInfoReturn = await countyInfoPromise;\r\n  return countyInfoReturn\r\n}\r\n\r\nexport async function addRoadbed(){\r\n    return await new Promise(function(res){\r\n        sketch.create(\"polyline\",{mode:\"click\", hasZ: false})\r\n        sketch.on('create', (event) => {\r\n            let lengthMiles;\r\n            if(event.state === \"complete\"){\r\n                //console.log(\"This is the previous total length: \",this.previousTotal)\r\n                lengthMiles = geometryEngine.geodesicLength(event.graphic.geometry, \"miles\")\r\n                //addLen(lengthMiles);\r\n                console.log(\"This is the current line length: \", parseFloat(lengthMiles.toFixed(3)));\r\n                res(lengthMiles);\r\n            }\r\n        });\r\n    }) \r\n}\r\n\r\nexport async function modifyRoadbed(bool){\r\n  let promise = new Promise(function(res){\r\n    view.on(\"immediate-click\", (event) => {\r\n      let opts = { include: featLayer }\r\n      view.hitTest(event, opts).then(function(response){\r\n        for(let i=0; i < response.results.length; i++){\r\n          if(response.results[i].graphic.geometry !== null && response.results[i].graphic.sourceLayer !== null){\r\n            let queryFeat = featLayer.queryFeatures({\r\n              objectIds: [response.results[0].graphic.attributes.objectid],\r\n              outFields: [\"*\"],\r\n              returnGeometry: true,\r\n              returnM: true\r\n            })\r\n            queryFeat.then(result => res(result))\r\n          }\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  let feature = await promise;\r\n  defineGraphic(feature,bool)\r\n  return feature//geometryEngine.geodesicLength(feature.features[0].geometry, \"miles\")\r\n}\r\n\r\nexport function zoomExtents(){\r\n  view.on('mouse-wheel',() => {\r\n    console.log(view.zoom)\r\n    view.zoom < 9 ?  featLayer.visible = false : featLayer.visible = true;\r\n  })\r\n}\r\n\r\nexport function hightlightFeat(){\r\n  view.on('pointer-move', (event) => {\r\n    const opts = {include: featLayer}\r\n    view.hitTest(event, opts).then(function(response){\r\n      if (response.results.length) {\r\n        let editFeature = response.results[0].graphic;\r\n        view.whenLayerView(editFeature.layer).then(function(layerView){\r\n          let highlight = layerView.highlight(editFeature);\r\n          view.on('pointer-move', (event) => {\r\n            view.hitTest(event, opts).then(function(response){\r\n              if(response.results.length === 0){\r\n                highlight.remove()\r\n              }\r\n            })\r\n          })\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction defineGraphic(graphics, dups){\r\n  if (dups === true){\r\n  let newGraphic = new Graphic({\r\n    geometry: {\r\n      type: \"polyline\",\r\n      paths: graphics.features[0].geometry.paths[0],\r\n      hasM: true,\r\n      spatialReference: {\r\n        wkid: 3857\r\n      }\r\n    },\r\n\r\n    attributes: {\r\n      objectid: graphics.features[0].attributes.objectid,\r\n      roadbedName: graphics.features[0].attributes.street_nm,\r\n      roadbedDesign: graphics.features[0].attributes.design,\r\n      roadbedSurface: graphics.features[0].attributes.surface,\r\n      numLane: graphics.features[0].attributes.num_lanes,\r\n      beginDfo: graphics.features[0].attributes.begin_dfo,\r\n      endDfo: graphics.features[0].attributes.end_dfo\r\n    },\r\n              \r\n    symbol: {\r\n      type: \"simple-line\",\r\n      color: [0, 0, 255],\r\n      width: 2,\r\n      style: \"dash\"\r\n    }\r\n  })\r\n  let objectidList = [];\r\n  gLayer.graphics.add(newGraphic);\r\n  for(let id in gLayer.graphics.items)\r\n    if(gLayer.graphics.items[id].attributes !== null){\r\n      objectidList.push(gLayer.graphics.items[id].attributes.objectid)\r\n    }\r\n    featLayer.definitionExpression = `OBJECTID not in (${objectidList}) and cnty_nm = '${graphics.features[0].attributes.cnty_nm}'`\r\n  }\r\n}\r\n\r\nexport async function updateLength(){\r\n    let oldlengthMile;\r\n    \r\n    let updatePromise = new Promise(function(res){\r\n      view.on('click', (evt)=>{\r\n        let opts = {include: gLayer}\r\n        view.hitTest(evt, opts).then(function(response){\r\n          //console.log(response)\r\n          if(response.results.length && response.results[0].graphic.attributes !== null){\r\n            oldlengthMile = geometryEngine.geodesicLength(response.results[0].graphic.geometry, \"miles\")\r\n            let id = response.results[0].graphic.attributes['objectid']\r\n            sketch.update(response.results[0].graphic,{tool: \"reshape\"})\r\n            sketch.on('update', (event) => {\r\n              let newlengthMiles;\r\n              if(event.state === \"complete\" && event.graphics[0].attributes['objectid'] === id){\r\n                newlengthMiles = geometryEngine.geodesicLength(event.graphics[0].geometry, \"miles\")\r\n              }\r\n              if(typeof oldlengthMile === \"number\" && typeof newlengthMiles === \"number\"){\r\n                let deltaLength = oldlengthMile - newlengthMiles\r\n                if(oldlengthMile < newlengthMiles){\r\n                  console.log('add')\r\n                  oldlengthMile = undefined\r\n                  newlengthMiles = undefined\r\n                  let addMiles = Math.abs(deltaLength)\r\n                  res(addMiles)\r\n                }\r\n                else if (oldlengthMile > newlengthMiles){\r\n                  console.log('sub')\r\n                  oldlengthMile = undefined\r\n                  newlengthMiles = undefined\r\n                  let subMiles = -Math.abs(deltaLength)\r\n                  res(subMiles)\r\n                }\r\n                else if(oldlengthMile === newlengthMiles){\r\n                  oldlengthMile = undefined\r\n                  newlengthMiles = undefined\r\n                }\r\n              }\r\n            })\r\n          }\r\n          else{\r\n            sketch.update(response.results[0].graphic,{tool: \"reshape\"})\r\n          }\r\n        })\r\n      })\r\n    });\r\n    let mileages = await updatePromise;\r\n    console.log(mileages)\r\n    return mileages\r\n}\r\n\r\n\r\nexport function stopEditing(){\r\n  sketch.cancel()\r\n}\r\n\r\nexport async function getGraphic(){\r\n  let graphicPromise = new Promise(function(res){\r\n   console.log(\"yes\")\r\n    view.on('click', (evt)=>{\r\n     let opts = {include: gLayer}\r\n     view.hitTest(evt, opts).then(function(response){\r\n       if(response.results.length && response.results[0].graphic.attributes !== null){\r\n        roadInfo.getName = response.results[0].graphic.attributes['roadbedName']\r\n        roadInfo.getDesign = response.results[0].graphic.attributes['roadbedDesign']\r\n        roadInfo.getSurface = response.results[0].graphic.attributes['roadbedSurface']\r\n        roadInfo.getLane = response.results[0].graphic.attributes['numLane']\r\n        roadInfo.getbeginDfo = response.results[0].graphic.attributes['beginDfo']\r\n        roadInfo.getendDfo = response.results[0].graphic.attributes['endDfo']\r\n        res(1)\r\n        console.log(roadInfo.getDesign)\r\n        console.log(roadInfo.getSurface)\r\n       }\r\n       \r\n     })\r\n   })\r\n  })\r\n  \r\n  let returnAttr = await graphicPromise\r\n  return returnAttr\r\n}\r\n"]}]}