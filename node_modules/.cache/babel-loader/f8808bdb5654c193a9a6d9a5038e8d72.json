{"remainingRequest":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\editFunc.js","dependencies":[{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\editFunc.js","mtime":1641585503879},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\babel.config.js","mtime":1641423326757},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641423715596},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/DPROSACK/Documents/GitHub/CRI-Update/src/components/Map/editFunc.js"],"names":["sketch","view","featLayer","gLayer","cntyNbrNm","geometryEngine","Graphic","countyInfo","Promise","res","queryUrl","window","location","href","crInfo","split","j","length","console","log","response","nbr","parseInt","addRoadbed","create","mode","hasZ","on","event","lengthMiles","state","geodesicLength","graphic","geometry","parseFloat","toFixed","modifyRoadbed","promise","opts","include","hitTest","then","i","results","sourceLayer","queryFeat","queryFeatures","objectIds","attributes","objectid","outFields","returnGeometry","returnM","result","feature","defineGraphic","features","zoomExtents","zoom","visible","hightlightFeat","editFeature","whenLayerView","layer","layerView","highlight","remove","graphics","newGraphic","type","paths","hasM","spatialReference","wkid","symbol","color","width","style","objectidList","add","id","items","push","definitionExpression","updateLength","updatePromise","evt","update","tool","oldlengthMile","newlengthMiles","deltaLength","addMiles","Math","abs","subMiles","mileages"],"mappings":"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","sourcesContent":["//import const from map.js\r\nimport {sketch, view, featLayer, gLayer} from '../Map/map'\r\nimport {cntyNbrNm} from '../../common/txCnt'\r\n//esri js geometry engine import\r\nimport * as geometryEngine from \"@arcgis/core/geometry/geometryEngine\";\r\nimport Graphic from \"@arcgis/core/Graphic\";\r\n//import Query from \"@arcgis/core/rest/support/Query\";\r\n\r\n\r\n\r\n//add login info\r\n//get county name and road totals\r\n\r\nexport async function countyInfo(){\r\n  return await new Promise(function(res){\r\n    let queryUrl = window.location.href\r\n    let crInfo = queryUrl.split('http://localhost:8080/')[1]\r\n    //console.log(crInfo.toString())\r\n    for (let j=0; j < cntyNbrNm.length; j++){\r\n      console.log(cntyNbrNm[j][crInfo])\r\n      if(cntyNbrNm[j][crInfo]){\r\n        res({response:true, nbr:parseInt(crInfo)})\r\n      }\r\n      else{\r\n        res({response:false})\r\n      }\r\n    }\r\n    //let crValidation = /^[0-9]{1,3}$/\r\n  })\r\n}\r\n\r\n// export async function getCntyInfo(){\r\n//   const query = new Query();\r\n//   query.where = \"CNTY_NM= 'Travis'\";\r\n  \r\n//   countyOfficialInfo.queryFeatures(query).then(result => console.log(result));  // prints the number of results satisfying the query\r\n  \r\n// }\r\n//getCntyInfo()\r\nexport async function addRoadbed(){\r\n    return await new Promise(function(res){\r\n        sketch.create(\"polyline\",{mode:\"click\", hasZ: false})\r\n        sketch.on('create', (event) => {\r\n            let lengthMiles;\r\n            if(event.state === \"complete\"){\r\n                //console.log(\"This is the previous total length: \",this.previousTotal)\r\n                lengthMiles = geometryEngine.geodesicLength(event.graphic.geometry, \"miles\")\r\n                //addLen(lengthMiles);\r\n                console.log(\"This is the current line length: \", parseFloat(lengthMiles.toFixed(3)));\r\n                res(lengthMiles);\r\n            }\r\n        });\r\n    }) \r\n}\r\n\r\nexport async function modifyRoadbed(){\r\n  let promise = new Promise(function(res){\r\n    view.on(\"immediate-click\", (event) => {\r\n      let opts ={ include: featLayer }\r\n      view.hitTest(event, opts).then(function(response){\r\n        for(let i=0; i < response.results.length; i++){\r\n          if(response.results[i].graphic.geometry !== null && response.results[i].graphic.sourceLayer !== null){\r\n            console.log(response.results[i])\r\n            let queryFeat = featLayer.queryFeatures({\r\n              objectIds: [response.results[0].graphic.attributes.objectid],\r\n              outFields: [\"*\"],\r\n              returnGeometry: true,\r\n              returnM: true\r\n            })\r\n            queryFeat.then(result => res(result))\r\n          }\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  let feature = await promise;\r\n  console.log(feature)\r\n  defineGraphic(feature)\r\n  return geometryEngine.geodesicLength(feature.features[0].geometry, \"miles\")\r\n}\r\n\r\nexport function zoomExtents(){\r\n  view.on('mouse-wheel',() => {\r\n    console.log(view.zoom)\r\n    view.zoom < 9 ?  featLayer.visible = false : featLayer.visible = true;\r\n  })\r\n}\r\n\r\nexport function hightlightFeat(){\r\n  view.on('pointer-move', (event) => {\r\n    const opts = {include: featLayer}\r\n    view.hitTest(event, opts).then(function(response){\r\n      if (response.results.length) {\r\n        let editFeature = response.results[0].graphic;\r\n        view.whenLayerView(editFeature.layer).then(function(layerView){\r\n          let highlight = layerView.highlight(editFeature);\r\n          view.on('pointer-move', (event) => {\r\n            view.hitTest(event, opts).then(function(response){\r\n              if(response.results.length === 0){\r\n                highlight.remove()\r\n              }\r\n            })\r\n          })\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction defineGraphic(graphics){\r\n  let newGraphic = new Graphic({\r\n    geometry: {\r\n      type: \"polyline\",\r\n      paths: graphics.features[0].geometry.paths[0],\r\n      hasM: true,\r\n      spatialReference: {\r\n        wkid: 3857\r\n      }\r\n    },\r\n\r\n    attributes: {\r\n      objectid: graphics.features[0].attributes.objectid\r\n    },\r\n              \r\n    symbol: {\r\n      type: \"simple-line\",\r\n      color: [0, 0, 255],\r\n      width: 2,\r\n      style: \"dash\"\r\n    }\r\n  })\r\n  let objectidList = [];\r\n  gLayer.graphics.add(newGraphic);\r\n  for(let id in gLayer.graphics.items)\r\n    if(gLayer.graphics.items[id].attributes !== null){\r\n      objectidList.push(gLayer.graphics.items[id].attributes.objectid)\r\n      console.log(objectidList)\r\n    }\r\n    featLayer.definitionExpression = `OBJECTID not in (${objectidList}) and cnty_nm = 'Travis'`\r\n}\r\n\r\nexport async function updateLength(){\r\n    let oldlengthMile;\r\n    let newlengthMiles;\r\n    let updatePromise = new Promise(function(res){\r\n      view.on('click', (evt)=>{\r\n        let opts = {include: gLayer}\r\n        view.hitTest(evt, opts).then(function(response){\r\n          console.log(response)\r\n          console.log(sketch)\r\n          if(response.results.length){\r\n            sketch.update(response.results[0].graphic,{tool: \"reshape\"})\r\n\r\n            sketch.on('update', (event) => {\r\n              //console.log(event)\r\n              if(event.state === \"start\"){\r\n                oldlengthMile = geometryEngine.geodesicLength(event.graphics[0].geometry, \"miles\")\r\n                console.log(oldlengthMile)\r\n              }\r\n              if(event.state === \"complete\"){\r\n                newlengthMiles = geometryEngine.geodesicLength(event.graphics[0].geometry, \"miles\")\r\n              }\r\n\r\n              if(typeof oldlengthMile === \"number\" && typeof newlengthMiles === \"number\"){\r\n                let deltaLength = oldlengthMile - newlengthMiles\r\n                console.log(deltaLength);\r\n                if(oldlengthMile < newlengthMiles){\r\n                  let addMiles = Math.abs(deltaLength)\r\n                  console.log(addMiles)\r\n                  res(addMiles)\r\n                  console.log('add')\r\n                }\r\n                else if (oldlengthMile > newlengthMiles){\r\n                  let subMiles = -Math.abs(deltaLength)\r\n                  res(subMiles)\r\n                  console.log('subtract')\r\n                }\r\n              }  \r\n            })\r\n          }\r\n          })\r\n        })\r\n     \r\n      });\r\n\r\n    let mileages = await updatePromise;\r\n    console.log(mileages)\r\n    return mileages\r\n}"]}]}