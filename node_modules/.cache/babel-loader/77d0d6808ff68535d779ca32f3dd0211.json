{"remainingRequest":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\editFunc.js","dependencies":[{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\src\\components\\Map\\editFunc.js","mtime":1641419109874},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\babel.config.js","mtime":1639609171225},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\DPROSACK\\Documents\\GitHub\\CRI-Update\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/DPROSACK/Documents/GitHub/CRI-Update/src/components/Map/editFunc.js"],"names":["sketch","view","featLayer","gLayer","geometryEngine","Graphic","countyInfo","crPromise","Promise","queryUrl","window","location","href","crInfo","split","console","log","crTest","RegExp","test","addRoadbed","res","create","mode","hasZ","on","event","lengthMiles","state","geodesicLength","graphic","geometry","parseFloat","toFixed","modifyRoadbed","promise","opts","include","hitTest","then","response","i","results","length","sourceLayer","queryFeat","queryFeatures","objectIds","attributes","objectid","outFields","returnGeometry","returnM","result","feature","defineGraphic","features","zoomExtents","zoom","visible","hightlightFeat","editFeature","whenLayerView","layer","layerView","highlight","remove","graphics","newGraphic","type","paths","hasM","spatialReference","wkid","symbol","color","width","style","objectidList","add","id","items","push","definitionExpression","updateLength","updatePromise","evt","update","tool","oldlengthMile","newlengthMiles","deltaLength","addMiles","Math","abs","subMiles","mileages"],"mappings":"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","sourcesContent":["//import const from map.js\r\nimport {sketch, view, featLayer, gLayer} from '../Map/map'\r\n//esri js geometry engine import\r\nimport * as geometryEngine from \"@arcgis/core/geometry/geometryEngine\";\r\nimport Graphic from \"@arcgis/core/Graphic\";\r\n\r\n\r\n\r\n//add login info\r\n//get county name and road totals\r\n\r\nexport async function countyInfo(){\r\n  let crPromise = new Promise(function(){\r\n    let queryUrl = window.location.href\r\n    let crInfo = queryUrl.split('?')[1].split('=')[1]\r\n    console.log(crInfo)\r\n    let crTest = new RegExp('[0-9]{0-3}')\r\n    console.log(crTest.test(crInfo))\r\n    })\r\n\r\n   console.log(crPromise)\r\n\r\n}\r\ncountyInfo()\r\nexport async function addRoadbed(){\r\n    return await new Promise(function(res){\r\n        sketch.create(\"polyline\",{mode:\"click\", hasZ: false})\r\n        sketch.on('create', (event) => {\r\n            let lengthMiles;\r\n            if(event.state === \"complete\"){\r\n                //console.log(\"This is the previous total length: \",this.previousTotal)\r\n                lengthMiles = geometryEngine.geodesicLength(event.graphic.geometry, \"miles\")\r\n                //addLen(lengthMiles);\r\n                console.log(\"This is the current line length: \", parseFloat(lengthMiles.toFixed(3)));\r\n                res(lengthMiles);\r\n            }\r\n        });\r\n    }) \r\n}\r\n\r\nexport async function modifyRoadbed(){\r\n  let promise = new Promise(function(res){\r\n    view.on(\"immediate-click\", (event) => {\r\n      let opts ={ include: featLayer }\r\n      view.hitTest(event, opts).then(function(response){\r\n        for(let i=0; i < response.results.length; i++){\r\n          if(response.results[i].graphic.geometry !== null && response.results[i].graphic.sourceLayer !== null){\r\n            console.log(response.results[i])\r\n            let queryFeat = featLayer.queryFeatures({\r\n              objectIds: [response.results[0].graphic.attributes.objectid],\r\n              outFields: [\"*\"],\r\n              returnGeometry: true,\r\n              returnM: true\r\n            })\r\n            queryFeat.then(result => res(result))\r\n          }\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  let feature = await promise;\r\n  console.log(feature)\r\n  defineGraphic(feature)\r\n  return geometryEngine.geodesicLength(feature.features[0].geometry, \"miles\")\r\n}\r\n\r\nexport function zoomExtents(){\r\n  view.on('mouse-wheel',() => {\r\n    console.log(view.zoom)\r\n    view.zoom < 9 ?  featLayer.visible = false : featLayer.visible = true;\r\n  })\r\n}\r\n\r\nexport function hightlightFeat(){\r\n  view.on('pointer-move', (event) => {\r\n    const opts = {include: featLayer}\r\n    view.hitTest(event, opts).then(function(response){\r\n      if (response.results.length) {\r\n        let editFeature = response.results[0].graphic;\r\n        view.whenLayerView(editFeature.layer).then(function(layerView){\r\n          let highlight = layerView.highlight(editFeature);\r\n          view.on('pointer-move', (event) => {\r\n            view.hitTest(event, opts).then(function(response){\r\n              if(response.results.length === 0){\r\n                highlight.remove()\r\n              }\r\n            })\r\n          })\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction defineGraphic(graphics){\r\n  let newGraphic = new Graphic({\r\n    geometry: {\r\n      type: \"polyline\",\r\n      paths: graphics.features[0].geometry.paths[0],\r\n      hasM: true,\r\n      spatialReference: {\r\n        wkid: 3857\r\n      }\r\n    },\r\n\r\n    attributes: {\r\n      objectid: graphics.features[0].attributes.objectid\r\n    },\r\n              \r\n    symbol: {\r\n      type: \"simple-line\",\r\n      color: [0, 0, 255],\r\n      width: 2,\r\n      style: \"dash\"\r\n    }\r\n  })\r\n  let objectidList = [];\r\n  gLayer.graphics.add(newGraphic);\r\n  for(let id in gLayer.graphics.items)\r\n    if(gLayer.graphics.items[id].attributes !== null){\r\n      objectidList.push(gLayer.graphics.items[id].attributes.objectid)\r\n      console.log(objectidList)\r\n    }\r\n    featLayer.definitionExpression = `OBJECTID not in (${objectidList}) and cnty_nm = 'Travis'`\r\n}\r\n\r\nexport async function updateLength(){\r\n    let oldlengthMile;\r\n    let newlengthMiles;\r\n    let updatePromise = new Promise(function(res){\r\n      view.on('click', (evt)=>{\r\n        let opts = {include: gLayer}\r\n        view.hitTest(evt, opts).then(function(response){\r\n          console.log(response)\r\n          console.log(sketch)\r\n          if(response.results.length){\r\n            sketch.update(response.results[0].graphic,{tool: \"reshape\"})\r\n\r\n            sketch.on('update', (event) => {\r\n              //console.log(event)\r\n              if(event.state === \"start\"){\r\n                oldlengthMile = geometryEngine.geodesicLength(event.graphics[0].geometry, \"miles\")\r\n                console.log(oldlengthMile)\r\n              }\r\n              if(event.state === \"complete\"){\r\n                newlengthMiles = geometryEngine.geodesicLength(event.graphics[0].geometry, \"miles\")\r\n              }\r\n\r\n              if(typeof oldlengthMile === \"number\" && typeof newlengthMiles === \"number\"){\r\n                let deltaLength = oldlengthMile - newlengthMiles\r\n                console.log(deltaLength);\r\n                if(oldlengthMile < newlengthMiles){\r\n                  let addMiles = Math.abs(deltaLength)\r\n                  console.log(addMiles)\r\n                  res(addMiles)\r\n                  console.log('add')\r\n                }\r\n                else if (oldlengthMile > newlengthMiles){\r\n                  let subMiles = -Math.abs(deltaLength)\r\n                  res(subMiles)\r\n                  console.log('subtract')\r\n                }\r\n              }  \r\n            })\r\n          }\r\n          })\r\n        })\r\n     \r\n      });\r\n\r\n    let mileages = await updatePromise;\r\n    console.log(mileages)\r\n    return mileages\r\n}"]}]}